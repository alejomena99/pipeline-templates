
on:
  workflow_dispatch:
  workflow_call:
    inputs:
    
      BUILD_ENV:
        required: true
        type: string

      VAR:
        required: true
        type: string

      TEST_WITH:
        required: true
        type: string
  
      DOCKER_REGISTER:
        required: true
        type: string
        
jobs:
          
  Build_and_Test:
    uses: alejo-quind/pipeline-templates/.github/workflows/Project-Build-and-Test.yml@main 
    if: ${{ inputs.BUILD_ENV == 'npm' }}
    secrets:
      inherit
    with:
      TEST_WITH: ${{ inputs.TEST_WITH }}

  Docker_prueba:
    uses: alejo-quind/pipeline-templates/.github/workflows/Docker-Build-and-Push.yml@main 
    if: ${{ inputs.DOCKER_REGISTER == 'acr' }}
    secrets:
      inherit
    with:
      DOCKER_REGISTER: ${{ inputs.DOCKER_REGISTER }}
      
  Azure_and_Docker:
    runs-on: ubuntu-latest  
    if: ${{ inputs.VAR == 'si' }}
    needs: Build_and_Test
    steps:
    
      - name: Azure ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_NAME }}
          password: ${{ secrets.ACR_TOKEN }}

      - name: Build and Push ACR
        run: |
          docker build . -t ${{ secrets.ACR_SERVER }}/${{ secrets.REPOSITORIO }}:${{ github.run_number }}
          docker push ${{ secrets.ACR_SERVER }}/${{ secrets.REPOSITORIO }}:${{ github.run_number }}
          
      - name: Azure CLI install and credentials
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_NAME }}
      
      - name: Cat kube config
        run: sudo cat /home/runner/.kube/config
      
      - name: Setup Helm  
        uses: azure/setup-helm@v3
        with:
           version: 'latest' # default is latest (stable)
           token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
        id: install
        
      - name: Helm deployment
        run: helm upgrade --namespace default --install --values alejo-helm/values.yaml ${{ secrets.APP }} alejo-helm
           
      - name: Echo message
        run: echo "¡Funcionó!"
