
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      mi_variable:
        required: true
        type: string

jobs:
  echo-message:
    runs-on: ubuntu-latest  
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Imprimir valor de la variable
        run: echo "El valor de mi_variable es ${{inputs.mi_variable}}"
      
      - name: Do something if my_var is some_value
        if: ${{ inputs.mi_variable == 'npm' }}
        run: echo "funciono"
        
      - name: Checkout
        uses: actions/checkout@v2.7.0
        with:
          repository: ${{ secrets.REPO_NAME }}
          token: ${{ secrets.REPO_TOKEN }}
          
      - name: Replace token
        run: |
          sed -i "s/#{POD_NAME}#/${{ secrets.POD_NAME }}/g; s/#{SVC_NAME}#/${{ secrets.SVC_NAME }}/g; s/#{APP}#/${{ secrets.APP }}/g; s/#{ACR_SERVER}#/${{ secrets.ACR_SERVER }}/g; s/#{REPOSITORIO}#/${{ secrets.REPOSITORIO }}/g; s/#{TAG_ID}#/${{ github.run_number }}/g" ${{ github.workspace }}/alejo-helm/values.yaml
          cat ${{ github.workspace }}/alejo-helm/values.yaml
          
      - name: NPM
        run: | 
          npm install
          npm install react-scripts@latest
          npm i -D jest-sonar-reporter
          npm run build
          npm run test
      
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: 'Drop'
          path: '${{ github.workspace }}/build'

      - name: Azure ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_NAME }}
          password: ${{ secrets.ACR_TOKEN }}

      - name: Build and Push ACR
        run: |
          docker build . -t ${{ secrets.ACR_SERVER }}/${{ secrets.REPOSITORIO }}:${{ github.run_number }}
          docker push ${{ secrets.ACR_SERVER }}/${{ secrets.REPOSITORIO }}:${{ github.run_number }}
          
      - name: Azure CLI install and credentials
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_NAME }}
      
      - name: Cat kube config
        run: sudo cat /home/runner/.kube/config
      
      - name: Setup Helm  
        uses: azure/setup-helm@v3
        with:
           version: 'latest' # default is latest (stable)
           token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
        id: install
        
      - name: Helm deployment
        run: helm upgrade --namespace default --install --values alejo-helm/values.yaml ${{ secrets.APP }} alejo-helm
           
      - name: Echo message
        run: echo "¡Funcionó!"
