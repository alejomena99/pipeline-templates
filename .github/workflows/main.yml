
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      BUILD_ENV:
        required: true
        type: string

jobs:
  echo-message:
    runs-on: ubuntu-latest  
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Imprimir valor de la variable
        run: echo "El valor de mi_variable es ${{inputs.mi_variable}}"
      
      - name: Build and Test NPM
        if: ${{ inputs.BUILD_ENV == 'npm' }}
        uses: alejo-quind/pipeline-templates/.github/workflows/main.yml@main
        with:
          REPO_NAME: ${{ secrets.REPO_NAME }}
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
          POD_NAME: ${{ secrets.POD_NAME }}
          SVC_NAME: ${{ secrets.SVC_NAME }}
          APP: ${{ secrets.APP }}
          ACR_SERVER: ${{ secrets.ACR_SERVER }}
          REPOSITORIO: ${{ secrets.REPOSITORIO }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST: ${{ secrets.SONAR_HOST }}


      - name: Azure ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_NAME }}
          password: ${{ secrets.ACR_TOKEN }}

      - name: Build and Push ACR
        run: |
          docker build . -t ${{ secrets.ACR_SERVER }}/${{ secrets.REPOSITORIO }}:${{ github.run_number }}
          docker push ${{ secrets.ACR_SERVER }}/${{ secrets.REPOSITORIO }}:${{ github.run_number }}
          
      - name: Azure CLI install and credentials
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_NAME }}
      
      - name: Cat kube config
        run: sudo cat /home/runner/.kube/config
      
      - name: Setup Helm  
        uses: azure/setup-helm@v3
        with:
           version: 'latest' # default is latest (stable)
           token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
        id: install
        
      - name: Helm deployment
        run: helm upgrade --namespace default --install --values alejo-helm/values.yaml ${{ secrets.APP }} alejo-helm
           
      - name: Echo message
        run: echo "¡Funcionó!"
